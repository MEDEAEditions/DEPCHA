<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Project: MEDEA
    Company: ZIM-ACDH (Zentrum fÃ¼r Informationsmodellierung - Austrian Centre for Digital Humanities)
    Author: Christopher Pollin 
    Last update: 2017
 -->



<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:functx="http://www.functx.com"
    xmlns:s="http://www.w3.org/2001/sw/DataAccess/rf1/result" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:t="http://www.tei-c.org/ns/1.0" xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/" exclude-result-prefixes="#all">
     
    <xsl:strip-space elements="*"/>
    <xsl:include href="medea-static.xsl"/>
    <xsl:include href="medea-templates.xsl"/>
    <xsl:output method="xml" doctype-system="about:legacy-compat" encoding="UTF-8" indent="no"/>
    
    <!-- VARIABLES -->   
    <!-- //////////////////////////////// -->
    <!-- global Variables are defined in medea-templates.xsl -->
   
   
    <xsl:template name="content">
        <!-- /// PAGE-CONTENT /// -->
        <script>
            $(document).ready(function() {
            $('#text_button').click(function(event){event.preventDefault();$('.spreadsheet_entry').addClass('hidden');$('.text_entry').removeClass('hidden');});
            $('#spreadsheet_button').click(function(event){event.preventDefault();$('.text_entry').addClass('hidden');$('.spreadsheet_entry').removeClass('hidden');});
            });
        </script>
    	<script>
    		 window.onload = function () {
    		var hash = window.location.hash.substr(1);
    		
    		if(hash)
    		{
    		console.log(hash);
    		location.hash = "#" + hash;
    		window.scrollBy(0, -150);
    		$('div.success').effect("highlight", {}, 3000);
    		}
    		 }
    	</script>
        
        <section class="row equalheight">
            <!-- ///NAVIGATION/// -->
            <!--<article class="col-md-2 panel equal hidden-sm hidden-xs">
                    <div class="navigation">
                        <h3>Navigation</h3>
                        <div class="pre-scrollable">
                        <!-\-<xsl:for-each select="//t:head | t:front">
                            <xsl:sort select="."></xsl:sort>
                            
                            <p class="list-group-item-text">
                                <a  href="{concat('#', 'head-', generate-id())}" class="list-group-item" onclick="scrolldown(this)">
                                  <xsl:value-of select="."/>
                                  <xsl:if test=".//@when">
                                     <xsl:text> - </xsl:text>
                                     <xsl:value-of select=".//@when"/>
                                  </xsl:if>
                                </a>
                            </p>        
                        </xsl:for-each> -\->
                            <xsl:text> </xsl:text>
                        </div>
                    </div>
            </article>-->
            
            <!-- ///CONTENT/// -->
            <article class="col-md-12 panel">
                    <!-- HEADER-->
                    <div class="header">
                        <h3>
                            <xsl:value-of select="$TEI_HEADER/t:fileDesc/t:titleStmt/t:title"/>
                        </h3>
                        <div class="well well-sm">
                            <div class="btn-group">
                                <a href="#" id="text_button" class="btn btn-default btn-sm">
                                    <span class="glyphicon glyphicon-th-list"><xsl:text> </xsl:text></span>
                                    <xsl:text> Text</xsl:text></a> 
                                
                                <a href="#" id="spreadsheet_button" class="btn btn-default btn-sm">
                                    <span class="glyphicon glyphicon-th"><xsl:text> </xsl:text></span>
                                    <xsl:text> Spreadsheet</xsl:text>
                                </a>
                                <!-- TEI, RDF etc. button -->
                                <a class="button" href="{concat('/',$teipid,'/TEI_SOURCE')}" role="button" style="margin: 10px;" target="_blank">
                                    <img alt="TEI" height="25" id="tei" src="https://glossa.uni-graz.at/templates/img/tei_icon.jpg" title="TEI"/>
                                </a>
                                <a class="button" href="{concat('/',$teipid,'/RDF')}" role="button" style="margin: 10px;" target="_blank">
                                    <img alt="RDF" height="25" id="rdf" src="https://glossa.uni-graz.at/templates/img/RDF_icon.png" title="RDF"/>
                                </a>
                                <!--<a class="button" href="{concat('glossa.uni-graz.at/archive/objects/',$teipid, '/methods/sdef:TEI/getLaTeXPDF')}" role="button" style="margin: 10px;">
                                    <img alt="PDF" height="25" id="pdf" src="https://glossa.uni-graz.at/templates/img/pdf_icon.png" title="PDF"/>
                                </a>-->
                               <!-- <a class="button" href="{concat('glossa.uni-graz.at/archive/objects/',$teipid,'/methods/sdef:TEI/getHSSF')}" role="button" style="margin: 10px;">
                                    <img alt="RDF" height="25" id="rdf" src="/gamsdev/pollin/medea/trunk/www/img/TABELLENSYMBOL.png" title="HSSF"/>
                                </a>-->

                            </div>
                        </div>                 
                    </div>
                    
                    <!-- CONTENT, TEXT -->
                    <div class="content col-md-12">
                        <xsl:apply-templates select="//t:text"/> 
                    </div>
                
            </article>
        </section>
    </xsl:template>
    
    <xsl:template match="t:text">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="t:front">
        <div class="front">
            <xsl:apply-templates/>
        </div>
    </xsl:template>
    
    <xsl:template match="t:body">
        <div class="body col-md-12">
            <xsl:apply-templates/>
        </div>
    </xsl:template>
    
    <!-- @ana bk-Ontology -->
    
    <!-- bk_ENTRY -->
    <xsl:template match="*[tokenize(@ana, ' ') = '#bk_entry']">
        
        <!-- count all preceding Entries -->
        <xsl:variable name="Position" select="count(preceding::node()[tokenize(@ana, ' ') = '#bk_entry'])"/>
        
        <!-- /////////// -->
        <!-- get  bk_from, to and when-->
        <!-- bk_from -->
        <xsl:variable name="bk_from">
            <xsl:call-template name="get_bk_">
                <xsl:with-param name="actualTerm" select="'#bk_from'"/>
            </xsl:call-template>
        </xsl:variable>  
        <!-- bk_to -->
        <xsl:variable name="bk_to">
            <xsl:call-template name="get_bk_">
                <xsl:with-param name="actualTerm" select="'#bk_to'"/>
            </xsl:call-template>
        </xsl:variable> 
        <!-- bk_when = date -->
        <xsl:variable name="bk_when">
            <xsl:call-template name="get_bk_">
                <xsl:with-param name="actualTerm" select="'#bk_when'"/>
            </xsl:call-template>
        </xsl:variable> 

        
        <!-- ////// //////////////-->
        <!-- ENTRY -->
        <div class="bk_entry text_entry row" id="{concat('Entry-', $Position)}">
            <xsl:if test="local-name() = 'row'">
                <xsl:attribute name="style">
                    <xsl:text>border-top-style: groove;</xsl:text>
                </xsl:attribute>
            </xsl:if>
            <div class="col-md-11">
                <xsl:apply-templates/>
            </div>
            <div class="col-md-1">
                <label class="pull-right"><input onclick="" type="checkbox" class=""/><xsl:text> </xsl:text></label>
            </div>
        </div>
       

        <!-- HIDDEN SPREADSHEET VIEW -->
        <div class="hidden spreadsheet_entry">
            
            <div class="col-md-5">
                <xsl:value-of select="$bk_from"/>
                <xsl:text> </xsl:text><span class="glyphicon glyphicon-arrow-right"><xsl:text> </xsl:text></span><xsl:text> </xsl:text>
                <xsl:value-of select="$bk_to"/>
            </div>
        	<!-- @unit -->
        	
            <div class="col-md-4">
            	<table class="table table-responsive">
            		<tr>
		                <xsl:for-each select=".//*[tokenize(@ana, ' ') = '#bk_amount'] | .//*[tokenize(@ana, ' ') = '#bk_what'] | .//*[tokenize(@ana, ' ') = '#bk_service']">
		                	<!-- a table for each unit -->
		                	<td class="col-md-4">
								<a data-toggle="tooltip" data-placement="top" >
		                    	<xsl:attribute name="title">
		                    		<xsl:value-of select=".//@unit[position()]"/>
		                    	</xsl:attribute>
		                    	<xsl:value-of select=".//@quantity[position()]"/><xsl:text> </xsl:text>
		                    	</a>
							</td>
		                	<!--<td class="col-md-4">
								<a data-toggle="tooltip" data-placement="top" >
		                    	<xsl:attribute name="title">
		                    		<xsl:value-of select=".//@unit[2]"/>
		                    	</xsl:attribute>
		                    	<xsl:value-of select=".//@quantity[2]"/><xsl:text> </xsl:text>
		                    	</a>
							</td>
		                	<td class="col-md-4">
								<a data-toggle="tooltip" data-placement="top" >
		                    	<xsl:attribute name="title">
		                    		<xsl:value-of select=".//@unit[3]"/>
		                    	</xsl:attribute>
		                    	<xsl:value-of select=".//@quantity[3]"/><xsl:text> </xsl:text>
		                    	</a>
							</td>-->
		                	
								  	<!--<xsl:for-each select=".//@unit">
										
								  		<td>
											<a data-toggle="tooltip" data-placement="top" >
					                    	<xsl:attribute name="title">
					                    		<xsl:value-of select="."/>
					                    	</xsl:attribute>
					                    	<xsl:value-of select="..//@quantity"/><xsl:text> </xsl:text>
					                    	</a>
								  		</td>
								  	</xsl:for-each>-->
		                </xsl:for-each>
            		</tr>
            	</table>
                <xsl:text> </xsl:text>
            </div>
            <div class="col-md-2">
            	<xsl:choose>
            		<xsl:when test="$bk_when castable as xs:date">
                		<xsl:value-of select="concat(day-from-date($bk_when[1]), '.', month-from-date($bk_when[1]), '.', year-from-date($bk_when[1]))"/>
            		</xsl:when>
            		<xsl:otherwise><xsl:text> </xsl:text></xsl:otherwise>
            	</xsl:choose>
            </div>
            <div class="col-md-1">
                <label class="pull-right"><input onclick="" type="checkbox" class=""/><xsl:text> </xsl:text></label>
            </div>    
        </div>
    </xsl:template>
    
    <!-- skip #bk_total -->
    <xsl:template match="*[tokenize(@ana, ' ') = '#bk_total']">
        
    </xsl:template>

    <!-- //////////////// -->
    
    <!-- HEAD -->
    <xsl:template match="t:head">
        <div class="bk_head container row" id="{concat('head-', generate-id())}">
            <xsl:apply-templates/>
        </div>
    </xsl:template>
 
    <!-- TABLE -->
    <xsl:template match="t:table">
        <div>
            <xsl:apply-templates/><xsl:text> </xsl:text>
        </div>
    </xsl:template>

    <xsl:template match="t:cell">
        <div class="{concat('col-md-', round(12 div count(parent::t:row/t:cell)))}" >
            <xsl:apply-templates/><xsl:text> </xsl:text>
       </div>
    </xsl:template>
    <!--  -->
     
    <!-- pb -->
    <xsl:template match="t:pb">
        <div class="text_entry">
            <a>
                <xsl:attribute name="href">
                    <xsl:choose>
                        <xsl:when test="@facs">
                            <!-- there is a intern reference in the TEI, @facs starts with # -->
                            <xsl:choose>
                                <xsl:when test="substring(@facs, 1, 1) = '#'">
                                    <!-- go to the element (e.g. t:surface) with the @xml:id and get the @url  -->
                                    <xsl:variable name="IDfromReference" select="substring-after(@facs, '#')"/>
                                    <xsl:value-of select="//.[@xml:id = $IDfromReference]//@url"/>
                                </xsl:when>
                                <!-- otherwise the @facs ist the URL  -->
                                <xsl:otherwise>
                                    <xsl:value-of select="@facs"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:otherwise></xsl:otherwise>
                    </xsl:choose>
                </xsl:attribute>
                <xsl:choose>
                    <xsl:when test="@n">
                        <xsl:text>fol. </xsl:text><xsl:value-of select="@n"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:text>fol. </xsl:text>
                    </xsl:otherwise>
                </xsl:choose>
            </a>
            <hr/>
        </div>
    </xsl:template>
    
    <!-- p -->
    <xsl:template match="t:p">
        <p>
            <xsl:apply-templates/>
        </p>
    </xsl:template>
    
    <!-- DATE -->
    <xsl:template match="t:date">
        <a data-toggle="tooltip">
            <xsl:attribute name="title">
                <xsl:choose>
                    <xsl:when test="@when">
                        <xsl:value-of select="@when"/>
                    </xsl:when>
                    <xsl:when test="@from">
                        <xsl:value-of select="@from"/>
                        <xsl:text> to </xsl:text>
                        <xsl:value-of select="@to"/>
                    </xsl:when>
                </xsl:choose>
            </xsl:attribute>
            <xsl:apply-templates/>
        </a>
    </xsl:template>
    
    <!-- DEL, ADD etc. -->
    <!-- /////////////////////////////////////// -->
    <xsl:template match="t:del">
        <del class="bg-warning" data-toggle="tooltip" title="deletion">
            <xsl:apply-templates/>
        </del>
    </xsl:template>
    
    <xsl:template match="t:damage">
        <mark class="bg-danger" data-toggle="tooltip" title="damage">
            <xsl:apply-templates/>
        </mark> 
    </xsl:template>
    
    <xsl:template match="t:supplied">
        <mark data-toggle="tooltip" title="supplied">
            <xsl:apply-templates/>
        </mark>
    </xsl:template>
    
    <xsl:template match="t:add">
        <mark class="bg-success" data-toggle="tooltip" title="add">
            <xsl:apply-templates/>
        </mark>
    </xsl:template>
    
    <xsl:template match="t:subst">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="t:note">
        <xsl:text> </xsl:text>
        <mark class="glyphicon glyphicon-star" data-toggle="tooltip" title="{normalize-space(.)}"><xsl:text> </xsl:text></mark>
    </xsl:template>
     
    <xsl:template match="t:hi">
        <em>
            <xsl:apply-templates/>
        </em>
    </xsl:template>
    
    <xsl:template match="t:choice">
        <xsl:text> </xsl:text>
        <a href="#" data-toggle="tooltip" title="{t:expan}">
            <xsl:choose>
                <xsl:when test="t:abbr">
                    <xsl:value-of select="t:abbr"/>
                </xsl:when>
                <xsl:otherwise><xsl:comment>t:abbr missing in choice</xsl:comment></xsl:otherwise>
            </xsl:choose>   
        </a>
        <xsl:text> </xsl:text>
    </xsl:template>



    
   
    
   <!-- <!-\- everything except a <row> becomes bk_entry -\->
    <xsl:template match="*[tokenize(@ana, ' ') = '#bk_entry']">
        <!-\-<xsl:apply-templates></xsl:apply-templates>-\->

        <div class="bk_entry text_entry col-md-12 " id="{concat('Entry-', position())}">
        
            <div class="col-md-10">
                <xsl:apply-templates></xsl:apply-templates>
            </div>
            <div class="col-md-2">
                <label class="pull-right"><input onclick="" type="checkbox" class=""/><xsl:text> </xsl:text></label>
            </div>
        </div>
        
        <div class="row">
      
            
                <tr>
                   <!-\- <xsl:for-each select=".//.[tokenize(@ana, ' ') = '#bk_amount']">-\->
                      <xsl:variable name="FromSpreadsheet">
                         <xsl:choose>
                             <xsl:when test="@ref">
                                 <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_from']/@ref"/>
                             </xsl:when>
                             <xsl:when test="@corresp">
                                 <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_from']/@corresp"/>
                             </xsl:when>
                             <xsl:otherwise>
                                 <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_from']"/>
                             </xsl:otherwise>
                         </xsl:choose> 
                      </xsl:variable>
                    
                     <xsl:variable name="ToSpreadsheet">
                         <xsl:choose>
                             <xsl:when test="@ref">
                                 <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_to']/@ref"/>
                             </xsl:when>
                             <xsl:when test="@corresp">
                                 <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_to']/@corresp"/>
                             </xsl:when>
                             <xsl:otherwise>
                                 <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_to']"/>
                             </xsl:otherwise>
                         </xsl:choose>
                     </xsl:variable>
                      

                        <td >
                            <xsl:value-of select="$FromSpreadsheet"/>
                            <xsl:text> </xsl:text><span class="glyphicon glyphicon-arrow-right"><xsl:text> </xsl:text></span><xsl:text> </xsl:text>
                            <xsl:value-of select="$ToSpreadsheet"/>
                        </td>
                        <td >
                            <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_amount']//@quantity"/><xsl:text> </xsl:text>                       
                        </td>
                        <td > 
                            <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_amount']//@unit"/><xsl:text> </xsl:text>  
                        </td>
                        <td > 
                            <label class="pull-right"><input onclick="" type="checkbox" class=""/><xsl:text> </xsl:text></label>
                        </td>
                     
                    <!-\-</xsl:for-each>-\-> 
                </tr>
                
                <xsl:if test="position() = last()">
                    <tr>
                        <td class="col-md-2">
                            <b>SUMME</b><xsl:text> </xsl:text>                     
                        </td>
                        <td class="col-md-2">
                            <xsl:sequence select="sum(.//@quantity/number(translate(., ',', '.')))"/>     
                        </td>
                        <td class="col-md-2">
                            <xsl:text> </xsl:text>                       
                        </td>
                    </tr>
                </xsl:if>
                
          
        
        </div>
    </xsl:template>
    
    <!-\- TABLE -\->
    
    <xsl:template match="t:table">
        <table class="table  table-bordered">
            <xsl:apply-templates/>
        </table>
    </xsl:template>
  
    <xsl:template match="t:head/t:table">
        <xsl:apply-templates></xsl:apply-templates>
    </xsl:template>
    
    <xsl:template match="t:row">
        <tr>
           <xsl:apply-templates></xsl:apply-templates>
        </tr>
    </xsl:template>
    
    <xsl:template match="t:row[tokenize(@ana, ' ') = '#bk_entry']">
        <tr class="bk_entry text_entry">
            <xsl:apply-templates/>
        </tr>
        <tr class="hidden spreadsheet_entry">
                    <!-\- <xsl:for-each select=".//.[tokenize(@ana, ' ') = '#bk_amount']">-\->
                    <xsl:variable name="FromSpreadsheet">
                        <xsl:choose>
                            <xsl:when test="@ref">
                                <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_from']/@ref"/>
                            </xsl:when>
                            <xsl:when test="@corresp">
                                <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_from']/@corresp"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_from']"/>
                            </xsl:otherwise>
                        </xsl:choose> 
                    </xsl:variable>
                    
                    <xsl:variable name="ToSpreadsheet">
                        <xsl:choose>
                            <xsl:when test="@ref">
                                <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_to']/@ref"/>
                            </xsl:when>
                            <xsl:when test="@corresp">
                                <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_to']/@corresp"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_to']"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    
                    
                    <td >
                        <xsl:value-of select="$FromSpreadsheet"/>
                        <xsl:text> </xsl:text><span class="glyphicon glyphicon-arrow-right"><xsl:text> </xsl:text></span><xsl:text> </xsl:text>
                        <xsl:value-of select="$ToSpreadsheet"/>
                    </td>
                    <td >
                        <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_amount']//@quantity"/><xsl:text> </xsl:text>                       
                    </td>
                    <td > 
                        <xsl:value-of select=".//.[tokenize(@ana, ' ') = '#bk_amount']//@unit"/><xsl:text> </xsl:text>  
                    </td>
                    <td> 
                        <label class="pull-right"><input onclick="" type="checkbox" class=""/><xsl:text> </xsl:text></label>
                    </td>
                    
                    <!-\-</xsl:for-each>-\-> 
                </tr>
                
                <xsl:if test="position() = last()">
                    <tr>
                        <td>
                            <b>SUMME</b><xsl:text> </xsl:text>                     
                        </td>
                        <td>
                            <xsl:sequence select="sum(.//@quantity/number(translate(., ',', '.')))"/>     
                        </td>
                        <td>
                            <xsl:text> </xsl:text>                       
                        </td>
                    </tr>
                </xsl:if>
                
        
    </xsl:template>
    
    
    <xsl:template match="t:cell">
        <!-\- bootstrap table auskommentiert -\->
        <!-\-<td class="{concat('col-md-', round(12 div count(parent::t:row/t:cell)))}">-\->
        
           <td><xsl:apply-templates/>
            <xsl:text> </xsl:text></td>
        <!-\-</td>-\->
    </xsl:template>
    
    <!-\- ///TEXT ///  -\->
    <xsl:template match="t:p[@ana = '#bk_total']">
        <div class="row">
            <xsl:apply-templates/>
        </div>
    </xsl:template>
    

    <xsl:template match="t:pb">
        <div class="page col-md-12 row">
            <h4>
             <xsl:choose>
                 <xsl:when test="@facs">
                     <xsl:value-of select="@facs"/>
                 </xsl:when>
                 <xsl:when test="@n">
                     <xsl:value-of select="@n"/>
                 </xsl:when>
                 <xsl:otherwise></xsl:otherwise>
             </xsl:choose>
            </h4>
            <hr/>

        </div>
    </xsl:template>
    

    <!-\- //////////////////// -\->
    
    <xsl:template match="t:text">
        <xsl:apply-templates/>
    </xsl:template>
    
    
    <xsl:template match="t:body">
        <xsl:apply-templates/>
    </xsl:template>
    

    
    <xsl:template match="t:head | t:front">
        <h4 class="bk_head" id="{concat('head-', generate-id())}">
            <xsl:apply-templates/>
        </h4>
    </xsl:template>
    

    
    <xsl:template match="t:date">
        <a data-toggle="tooltip">
            <xsl:attribute name="title">
                <xsl:choose>
                    <xsl:when test="@when">
                        <xsl:value-of select="@when"/>
                    </xsl:when>
                    <xsl:when test="@from">
                        <xsl:value-of select="@from"/>
                        <xsl:text> to </xsl:text>
                        <xsl:value-of select="@to"/>
                    </xsl:when>
                </xsl:choose>
            </xsl:attribute>
            <xsl:apply-templates/>
        </a>
    </xsl:template>
   
-->
    


</xsl:stylesheet>